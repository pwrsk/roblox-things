local P = game:GetService("Players")
local U = game:GetService("UserInputService")
local R = game:GetService("RunService")
local C = workspace.CurrentCamera

local p = P.LocalPlayer
local m = p:GetMouse()

local s = Instance.new("ScreenGui")
s.Parent = p:WaitForChild("PlayerGui")
s.ResetOnSpawn = false

local t = Instance.new("Frame")
t.Name = "TopBar"
t.Size = UDim2.new(0.2, 0, 0, 3)
t.Position = UDim2.new(0.4, 0, 0, -30)
t.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
t.BorderSizePixel = 0
t.Parent = s

local h = Instance.new("TextButton")
h.Name = "InvisibleHitbox"
h.Size = UDim2.new(0.25, 0, 0, 10)
h.Position = UDim2.new(0.375, 0, 0, -33.5)
h.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
h.BackgroundTransparency = 1
h.BorderSizePixel = 0
h.Text = ""
h.Parent = s

local f = Instance.new("Frame")
f.Size = UDim2.new(0.22, 0, 0.22, 0)
f.Position = UDim2.new(0.39, 0, 0.38, 0)
f.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
f.BackgroundTransparency = 0.1
f.Visible = false
f.Parent = s

local c = Instance.new("UICorner")
c.CornerRadius = UDim.new(0, 16)
c.Parent = f

local l1 = Instance.new("TextLabel")
l1.Size = UDim2.new(0.18, 0, 0.2, 0)
l1.Position = UDim2.new(0.01, 0, 0.1, 0)
l1.BackgroundTransparency = 1
l1.Text = "Fov:"
l1.TextColor3 = Color3.fromRGB(255,255,255)
l1.Font = Enum.Font.GothamSemibold
l1.TextScaled = true
l1.TextXAlignment = Enum.TextXAlignment.Right
l1.Parent = f

local b1 = Instance.new("TextBox")
b1.Size = UDim2.new(0.5, 0, 0.2, 0)
b1.Position = UDim2.new(0.2, 0, 0.1, 0)
b1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
b1.Text = "70"
b1.TextColor3 = Color3.fromRGB(0, 0, 0)
b1.Font = Enum.Font.GothamSemibold
b1.TextSize = 16
b1.Parent = f

local ci = Drawing.new("Circle")
ci.Visible = true
ci.Color = Color3.fromRGB(255, 255, 255)
ci.Thickness = 2
ci.Filled = false
ci.Transparency = 1

local l2 = Instance.new("TextLabel")
l2.Size = UDim2.new(0.18, 0, 0.2, 0)
l2.Position = UDim2.new(0.01, 0, 0.4, 0)
l2.BackgroundTransparency = 1
l2.Text = "TargetPart:"
l2.TextColor3 = Color3.fromRGB(255,255,255)
l2.Font = Enum.Font.GothamSemibold
l2.TextScaled = true
l2.TextXAlignment = Enum.TextXAlignment.Right
l2.Parent = f

local b2 = Instance.new("TextButton")
b2.Size = UDim2.new(0.5, 0, 0.2, 0)
b2.Position = UDim2.new(0.2, 0, 0.4, 0)
b2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
b2.Text = "Target Part: Head"
b2.TextColor3 = Color3.fromRGB(0, 0, 0)
b2.Font = Enum.Font.GothamSemibold
b2.TextSize = 16
b2.Parent = f

local b3 = Instance.new("TextButton")
b3.Size = UDim2.new(0, 50, 0, 50)
b3.Position = UDim2.new(0.5, -25, 0.5, -25)
b3.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
b3.BackgroundTransparency = 0.1
b3.Text = "Lock"
b3.TextColor3 = Color3.fromRGB(255,255,255)
b3.Font = Enum.Font.GothamBold
b3.TextSize = 18
b3.Parent = s

local c2 = Instance.new("UICorner")
c2.CornerRadius = UDim.new(0, 12)
c2.Parent = b3

local l3 = Instance.new("TextLabel")
l3.Size = UDim2.new(0.18, 0, 0.2, 0)
l3.Position = UDim2.new(0.01, 0, 0.7, 0)
l3.BackgroundTransparency = 1
l3.Text = "Button Size:"
l3.TextColor3 = Color3.fromRGB(255,255,255)
l3.Font = Enum.Font.GothamSemibold
l3.TextScaled = true
l3.TextXAlignment = Enum.TextXAlignment.Right
l3.Parent = f

local b4 = Instance.new("TextBox")
b4.Size = UDim2.new(0.5, 0, 0.2, 0)
b4.Position = UDim2.new(0.2, 0, 0.7, 0)
b4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
b4.Text = tostring(b3.Size.X.Offset)
b4.TextColor3 = Color3.fromRGB(0, 0, 0)
b4.Font = Enum.Font.GothamSemibold
b4.TextScaled = true
b4.Parent = f

b4:GetPropertyChangedSignal("Text"):Connect(function()
    local v = tonumber(b4.Text)
    if v and v > 0 then
        b3.Size = UDim2.new(0, v, 0, v)
    end
end)

local a = false
local fv = 70
local tp = "Head"
local lp = nil

local function pa(plr)
    return plr and plr.Character and plr.Character:FindFirstChild(tp)
end

local function ufc()
    local v = tonumber(b1.Text) or 70
    fv = v
    local vs = C.ViewportSize
    ci.Radius = fv / 2
    ci.Position = Vector2.new(vs.X / 2, vs.Y / 2)
end

h.MouseButton1Click:Connect(function()
    f.Visible = not f.Visible
end)

b1:GetPropertyChangedSignal("Text"):Connect(ufc)

b2.MouseButton1Click:Connect(function()
    if tp == "Head" then
        tp = "HumanoidRootPart"
        b2.Text = "Target Part: HumanoidRootPart"
    else
        tp = "Head"
        b2.Text = "Target Part: Head"
    end
end)

local function gnp()
    local sc = Vector2.new(C.ViewportSize.X / 2, C.ViewportSize.Y / 2)
    local np = nil
    local sd = fv / 2

    for _, t in ipairs(P:GetPlayers()) do
        if t ~= p and t.Character and t.Character:FindFirstChild(tp) then
            local pt = t.Character[tp]
            local sp, os = C:WorldToViewportPoint(pt.Position)
            if os then
                local sp2 = Vector2.new(sp.X, sp.Y)
                local d = (sp2 - sc).Magnitude
                if d < sd then
                    sd = d
                    np = t
                end
            end
        end
    end

    return np
end

local function utbt()
    b3.Text = a and "Unlock" or "Lock"
end

local dg = false
local ds = nil
local dof = nil
local dt = 0
local dth = 0.5
local dc = nil
local uc = nil

-- Универсальная функция получения позиции ввода
local function getInputPos(i)
    if i.UserInputType == Enum.UserInputType.Touch then
        return Vector2.new(i.Position.X, i.Position.Y)
    else
        return U:GetMouseLocation() - Vector2.new(0, 36)
    end
end

local function odic()
    if dg then
        local mp = getInputPos(U.InputBegan) -- Use the input that started the drag
        local np = mp - dof
        local g = b3.Parent
        local as = g.AbsoluteSize
        local bs = b3.AbsoluteSize
        local rx = math.clamp(np.X, 0, as.X - bs.X)
        local ry = math.clamp(np.Y, 0, as.Y - bs.Y)
        b3.Position = UDim2.new(0, rx, 0, ry)
    end
end

local function oie(i)
    if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
        activeInput = nil
        local ht = tick() - dt
        if dg then
            dg = false
            b3.BackgroundColor3 = a and Color3.fromRGB(60, 60, 60) or Color3.fromRGB(40, 40, 40)
        elseif ht < dth then
            if not a then
                local t = gnp()
                if t then
                    lp = t
                    a = true
                    b3.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                else
                    lp = nil
                    a = false
                    b3.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                end
            else
                a = false
                lp = nil
                b3.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            end
            utbt()
        end
        if dc then dc:Disconnect() dc = nil end
        if uc then uc:Disconnect() uc = nil end
    end
end

-- Drag/Lock с поддержкой Touch
local activeInput = nil
b3.InputBegan:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
        dt = tick()
        ds = getInputPos(i)
        dof = ds - Vector2.new(b3.AbsolutePosition.X, b3.AbsolutePosition.Y)
        dg = false
        activeInput = i
        dc = U.InputChanged:Connect(function(mi)
            if (mi.UserInputType == Enum.UserInputType.MouseMovement) or (mi.UserInputType == Enum.UserInputType.Touch and activeInput and mi == activeInput) then
                if not dg and tick() - dt > dth and (
                    (i.UserInputType == Enum.UserInputType.MouseButton1 and U:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)) or
                    (i.UserInputType == Enum.UserInputType.Touch)
                ) then
                    dg = true
                    b3.BackgroundColor3 = Color3.fromRGB(100, 100, 180)
                end
                if dg then
                    local pos = getInputPos(mi)
                    local np = pos - dof
                    local g = b3.Parent
                    local as = g.AbsoluteSize
                    local bs = b3.AbsoluteSize
                    local rx = math.clamp(np.X, 0, as.X - bs.X)
                    local ry = math.clamp(np.Y, 0, as.Y - bs.Y)
                    b3.Position = UDim2.new(0, rx, 0, ry)
                end
            end
        end)
        uc = U.InputEnded:Connect(oie)
    end
end)

R.RenderStepped:Connect(function()
    if a and lp then
        if pa(lp) then
            local tp = lp.Character[tp].Position
            C.CFrame = CFrame.new(C.CFrame.Position, tp)
        end
    end
    ufc()
end)
